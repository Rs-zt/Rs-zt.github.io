[{"title":"JDK安装与配置","url":"/2023/07/13/JDK%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/","content":"","tags":["jdk"]},{"title":"mysql语法","url":"/2023/07/12/mysql%E8%AF%AD%E6%B3%95/","content":"1.基本概念\n数据库的概念\n\n​\t\t\t1）结构化查询语言（Structured Query Language）简称SQL；​\t\t\t2）数据库管理系统（Database Management System）简称DBMS；​\t\t\t3）数据库管理员（Database Administration）简称DBA，功能是确保DBMS的正常高效运行；\n\nSQL常用的3个部分\n\n​\t\t\t1）数据查询语言（DQL）：其语句也称“数据库检索语句”，用以从表中获得数据，保留字SELECT经常使用，DQL也是所有SQL中用的最多的，其他保留字还有WHERE, ORDER BY, GROUP BY和HAVING这些保留字还与DML一起使用；​\t\t\t2）数据操作语言（DML）：其余局包括动词INSERT，UPDATE和DELETE。他们分别用于添加，修改和删除表中的行。也称动作语言；​\t\t\t3）数据定义语言（DDL）：DDL主要用于操作数据库。\n2.SQL列的常用类型\n\n\nMySQL\nJava\n\n\n\nINT\nint\n\n\nBIGINT\nlong\n\n\nDECIMAL\nBigDecimal\n\n\nDATE&#x2F;DATETIME\njava.util.Date\n\n\nVARCHAR\nString\n\n\n3.DDL简单操作3.1数据库的操作\n连接数据库语句\n\nmysql -uroot -proot\n\n\n查看数据库列表\n\nshow databases\n\n\n\n\n创建数据库\n\ncreate database 数据库名称\n\n\n\n\n删除数据库\n\ndrop database 数据库名称\n\n\n\n\n修改数据库\n\nalter database 数据库名称 charset=编码格式\n\n\n\n\n查看当前数据库下所有数据表\n\nshow tables\n\n3.2 表的操作\n表的约束\n\n1.非空约束: NOT NULL,不允许某列的内容为空\n2.设置列的默认值:\tDEFAULT\n3.唯一约束: unique,该表中,该列的内容必须唯一\n4.主键约束: primary key,非空且唯一\n5.主键自增长: auto_increment,从1开始,步长为1\n6.外键的约束:foreign key.A表中的外键列.A表中的外键列必须参照B表中的某一列\n\n建表\n\n1.建表语法\n列名1  列的类型  [约束],列名2  列的类型  [约束],...列名N  列的类型  [约束]);// 注意：最后一行没有逗号\n\ndrop table if exit &#x27;student&#x27;//表示数据库有这个表就删除create table student(\tid BIGINT PRIMARY KEY AUTO_INCREMENT    name varchar(25) unique    email varchar(25) not null    age int defaut 17);\n\n\n\n\n删除表\n\n1.删除表的语法\ndrop table 表的名称\n\n4.DML操作4.1 修改操作(update set)\n语法\n\nUPDATE 表名SET 列1 = 值1, 列2 = 值2, ...WHERE [条件]\n\n\n实战\n\nupdate student set name=&quot;张三&quot; where name=&quot;李四&quot;\n\n注意:不要省略where条件语句,否则全表都会更改4.2 插入操作(insert into value)\n语法\n\nINSERT INTO 表名 (列1，列2，...) VALUE (值1，值2，...);\n\n\n实战\n\ninsert into student (id,name, age,email)values(1,&quot;张三&quot;,17,&quot;15655@qq.com&quot;)//插入全部记录\n\n4.3 删除操作(DELETE)\n语法\n\ndelete from 表名 where [条件]\n\n\n实战\n\ndelete from student where id=4\n\n注意:where条件语句不能省略,否则全表都会被删除5.DQL操作\n5.1消除重复元素(distinct)\n语法\n\nselect distinct 列名,...from 表名\n\n注意:distinct放在2个字段前,是2个字段组合后重复才去重，放在第一个后会报错\n实战\n\nselect distinct productname,brand from product\n\n5.2算术运算符(+,-,*,&#x2F;)\n算术运算符的使用范围1）对 number 型数据可以使用算术运算符（+，-，*，&#x2F;）对数据进行操作；对date型数据可以使用部分算术运算符（+，-）对数据进行操作。\n算术运算符的优先级1）与数学中运算相同\n实战\n\nselectid,productName,salePrice*discount from product\n\n5.3 设置别名(AS)\n作用1）改变列的标题头；2）作为计算结果的含义；3）作为列的别名；4）如果别名使用特殊字符（强烈不建议使用特殊字符），或是强制大小写或有空格时都需要加单引号。\n语法\n\nselect 列名 as 别名 from 表名 [where]select 列名  别名 from 表名[where]\n\n\n实战\n\nselect id,productName,SaleProce* dicount as price from product\n\n5.4按格式输出(concat)1）为了方便用户浏览查询结果数据，有时需要设置查询结果的显示格式，可以使用CONCAT函数来连接字符串。\n\n语法\n\nconcat(字符串1,字符串3,....)\n\n\n\n\n实战\n\nselect concat(productName,&quot;商品的单价为:&quot;,saleprice) from product\n\n5.5过滤查询(where)1.使用where子句限定返回的记录\n\n语法\n\nselect &lt;selectlist&gt; from 表名 where 条件\n\n5.6比较运算符(&#x3D;,&gt;,&gt;&#x3D;,&lt;,&lt;&#x3D;,!&#x3D;)\n实战\n\n// 查询商品名为 罗技G9X 的货品信息SELECT * FROM product WHERE productName = &quot;罗技G9X&quot;;// 查询批发价大于350的货品信息（折扣价 = 销售价*折扣）SELECT *, salePrice * discount FROM product WHERE salePrice * discount &gt; 350;\n\n5.7逻辑运算符(and,or,not)1）AND：如果组合的田间都是 true，返回true；2）OR：如果组合的条件之一是true，返回true；3）NOT：如果给出的条件是false，返回true；如果给出的条件是true，则返回false。\n\n实战\n\n// 查询售价在300-400（包括300和400）的货品信息SELECT * FROM product WHERE salePrice &gt;= 300 ADN salePrice &lt;= 400;// 查询分类编号为2, 4的所有货品信息SELECT * FROM product WHERE dir_id = 2 OR dir_id = 4;// 查询编号不为2的所有商品信息SELECT * FROM product WHERE NOT dir_id = 2\n\n5.8 范围和集合（BETWEEN AND）1）范围匹配：BETWEEN AND 运算符，一般使用在数字类型的范围上。但对于字符数据和日期类型同样可用。注意：BETWEE AND 使用的是闭区间。\n\n语法\n\n// 使用的是闭区间，也就是包括minValue 和 maxValueWHERE 列名 BETWEEN minValue AND maxValue;\n\n\n实战\n\n// 查询零售价不在 300 - 400 之间的货品信息SELECT * FROM product WHERE NOT salePrice BETWEEN 300 AND 400;\n\n2）集合查询：使用 IN 运算符，判断列的值是否在指定的集合中。\n\n语法\n\nWHERE 列名 IN (值1, 值2, ...);\n\n\n实战\n\n// 查询分类编号为 2，4 的所有货品的 id，货品名称SELECT id, productName FROM product WHERE dir_id IN (2,4);// 查询分类编号不为 2, 4 的所有货品的 id，货品名称SELECT id, dir_id, productName FROM product WHERE NOT dir_id IN (2,4);\n\n5.9 判空（IS NULL)1）IS NULL：判断列的值是否为空值，非空字符串，空字符串使用 &#x3D;&#x3D; 判断；\n\n语法\n\nWHERE 列名 IS NULL;\n\n\n实战\n\n// 查询商品名为NULL的所有商品信息SELECT * FROM product WHERE productName IS NULL;SELECT * FROM product WHERE supplier = &quot;&quot;;\n\n结论：使用 &#x3D; 来判断只能判断空字符串，不能判断 null；而使用 IS NULL 只能判断 null 值，不能判断空字符串。\n5.10 模糊匹配查询（LIKE，%，_）1）LIKE：模糊查询数据使用 LIKE 运算执行通配符；2）通配符：% 表示可有零个或多个任意字符; _ 便是需要一个任意字符；\n\n语法\n\nWHERE 列名 LIKE &quot;%M_&quot;;\n\n\n实战\n\n// 查询货品名称以 罗技M9* 结尾的所有货品信息，这里的 * 表示一个任意字符，它不具备任何意义，只是我出于题目需要才这样写，便于你理解而已SELECT * FROM product WHERE productName LIKE &quot;%罗技M9_&quot;;\n\n5.11 结果排序（ORDER BY）1）ORDER BY：使用 ORDER BY子句将查询结果进行排序，ORDER BY子句出现在 SELECT 语句的最后；2）ASC：升序；DESC：降序；\n\n实战\n\n// 查询 id，货品名称，分类编号，零售价 按分类编号降序排序，如果分类编号相同再按零售价升序排序SELECT * FROM product ORDER BY dir_id DESC, salePrice ASC;\n\n5.12 分组查询（GROUP BY）1）Group By：分组查询，一般与having一起用，查询的参数只能是统计函数和分组的条件参数，或者是聚合函数，having 后面的条件只能是分组查询的字段或者统计函数；\n\n实战\n\n# 查询分组条件之外的值，拼接成字符串select theme_id, group_concat(dest_id) dest_id, group_concat(dest_name) dest_name from strategy group by theme_id having theme_id = 1\n\n5.13 DQL字句的执行顺序1）FROM字句：从哪张表中去查数据；2）JOIN table：先确定表，在确定关联条件；3）ON 条件：表绑定条件；4）WHERE字句：筛选需要的行数据；5）GROUP BY子句：分组操作；6）HAVING：对分组后的记录进行聚合；7）SELECT字句：筛选需要显示的列数据；（对字段 AS 起别名是在这时候，所以 WHERE 中不能用字段的别名，ORDER BY 中可以使用别名）；8）DISTINCT：去重；9）ORDER BY子句：排序操作；10）LIMIT子句：限制条件；\n6.统计函数6.1 常用关键字(COUNT、SUM、MAX、MIN、AVG）概念1）COUNT(*)：统计表中有多少条数据；2）SUM(列)：汇总列的总和；3）MAX(列)：获取某一列的最大值；4）MIN(列)：获取某一列的最小值；5）AVG(列)：获取某一列的平均值；\n\n实战\n\n// 查询货品表共有多少数据SELECT COUNT(*) FROM product;// 计算所有货品的销售价SELECT SUM(costPrice) FROM product;\n\n","tags":["mysql语法"]},{"title":"IDEA2022.1版本破解方法","url":"/2023/07/12/IDEA2022-1%E7%89%88%E6%9C%AC%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95/","content":"前言本篇文章是基于win10系统下载安装IntelliJ IDEA 2022.1的教程。本教程适用于 JetBrains 全家桶最新版本，包括 IDEA、Pycharm、WebStorm、PhpStorm、AppCode 等。支持最新版IDEA 2022.1；同样适用于2018、2019、2020、2021等其他各版本\n一、下载IDEA\nIDEA官网：https://www.jetbrains.com/idea/download/#section=windows IDEA中文官网：https://www.jetbrains.com/zh-cn/idea/download/#section=windows\n\n二、安装IDEA1.双击 .exe文件2.选择安装路径注意:根据自己需求更改路径地址\n3.选择安装选项\n4.等待安装安装完成后，可以选择立即重启（这里会重启电脑）\n\n三、配置IDEA激活插件1.双击软件2.直接点击exit退出,先不用管\n3.下载破解包并解压注意:路径不要含有中文和特殊字符链接：https://pan.baidu.com/s/1OMbi9muI4nCuLBsBNRcNyg?pwd=rs12 提取码：rs12\n\n4.打开破解包并点击  安装.bat\n5.点击确定\n6.点击确定\n7.打开IDEA,然后把激活码拖到指定区域,最后点击activate\n\n8.最后显示如下图表示破解成功\n注意:以上破解针对于IDEA2022.1版本,如果是其他版本此方法不同,本人建议去以下网址自行摸索破解https://www.exception.site/\n\n","tags":["IDEA"]},{"title":"IDEA(破解方法)","url":"/2023/07/12/IDEA-%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95/","content":"IntelliJ IDEA 2022.1永久破解激活教程（最新版，亲测可用）前言本篇文章是基于win10系统下载安装IntelliJ IDEA 2022.1的教程。本教程适用于 JetBrains 全家桶最新版本，包括 IDEA、Pycharm、WebStorm、PhpStorm、AppCode 等。支持最新版IDEA 2022.1；同样适用于2018、2019、2020、2021等其他各版本\n一、下载IDEAIDEA官网：https://www.jetbrains.com/idea/download/#section=windows IDEA中文官网：https://www.jetbrains.com/zh-cn/idea/download/#section=windows\n\n二、安装IDEA1.双击 .exe文件2.选择安装路径3.选择安装选项\n4.等待安装安装完成后，可以选择立即重启（这里会重启电脑）\n三、配置IDEA激活插件1.启动IDEA并登录试用必须登录才能试用，点击登录跳转到登录界面，没有账号可以先注册账号，忘记密码可以先找回\n\n登录成功后点击开始试用，可以看到试用到期日。（一般是可以自动同步，如没有同步，可以再次点击Log in）\n\n2.初次试用，新建项目，进入软件控制台如果是初次试用，可以点击New Project，新建一个项目，进入软件控制台\n\n如果是第一次构建项目，并且Maven本地仓库没有依赖，那么构建时间可能会比较久；Maven的下载与安装配置可以参照：\n3.插件下载链接：https://pan.baidu.com/s/1jr-lrsA6hWcSzdnSQjyPyA 提取码：wsnk\n\n4.配置插件需要找到配置文件：idea64.exe.vmoptions\n4.1.1、查找方式一如果能正常进入工具，就使用此方式；如果试用期已过，无法打开IDEA，请参考 【4.1.2、查找方式二】\n\n4.1.2、查找方式二用户目录下找到 idea64.exe.vmoptions注意：AppData目录为隐藏目录，需要手动输入，或通过取消勾选以下选项显示隐藏文件夹\n\n示例路径\n\n4.3、移除其他插件如果之前使用过其他插件，请使用 #注释，或者在 settings→plugin→installed 中将其他失效的激活插件卸载\n4.4、编辑 idea64.exe.vmoptions配置文件-javaagent:你的本地路径\\ja-netfilter.jar 示例：-javaagent:E:\\IDEA\\Plugins\\ja-netfilter.jar IDEA中配置后的效果\n\n4.5、一定要重启软件（重要）4.5.1、插件配置后无法启动如果配置完插件，导致软件无法启动，原因就是插件配置错误导致的，请通过上面的【4.1.2、查找方式二】在用户目录中找到对应的配置文件，将插件的配置项调整正确或者通过 #号注释，再重启\n5.在线激活打开激活界面：Help→Register\n\n在线激活地址：https://jetbra.in\n\n激活成功效果：授权给 用户名 （我重启软件时，自动安装了插件，变成了中文，这里推荐还是使用英文界面）\n\n在步骤【4.4】时，图中配置命令最前面少了”-“，所以出现如下错误信息，加上”-“再重启软件即可\n\nimage.png\n6.激活失败原因原因一：插件配置错误，请核对 原因二：插件配置完没有重启！重启之后再进行操作 原因三：因为是在线的，受网络影响，可能出现链接错误，可多点击几次Activate尝试（这个失败我没有出现过，没有办法贴图）\n7.激活成功点击help→about，出现如下界面，即是激活成功\n\n","tags":["IDEA"]},{"title":"mysql练习题","url":"/2023/07/11/mysql%E7%BB%83%E4%B9%A0%E9%A2%98/","content":"1.查出在10部门的员工名字,工资\nselect ename,salary from emp where deptno=10\n\n\n\n2.找出工资大于1200元的员工全名、工资、职称\nselect ename,salary,job from emp where salary &gt;1200\n\n\n\n3.查出在10，30部门的员工名,薪水\nselect ename,salary from emp where deptno=10 and 30\n\n\n\n4.找出工资大于1500并且没有提成的员工\nselect * from emp where salary &gt;1500 and comm is null\n\n\n\n5.查出名字是以M打头的员工\nselect *from emp where ename like &#x27;M%\n\n\n\n6.查出姓名中第三个字母是e的员工\nselect * from emp where substr(ename,3,1)=&#x27;e&#x27;\n\n\n\n7.找出没有提成率的员工\nselect * from emp where comm is null\n\n\n\n8.找出工资在950(含)至1200(含)元的员工姓名、职称\nselect ename,job from emp where salary between 950 and 1200\n\n\n\n9.找出2月份入职的员工名、入职时间、工资\nselect ename,hiredate,salary from emp where month(hiredate)=2\n\n\n\n\n\n查询出所有员工的职位，不重复\nselect distinct job from emp \n\n\n\n查询出各个部门的员工数量\nselect deptno,count(*) from emp group by deptno\n\n\n\n– 查询出各年份入职的员工情况（年份，员工人数）\nselect year(hiredate) as year,count(*) from emp group by year(hiredate) order by year(hiredate)\n\n\n\n– 查询出每年每月入职的员工情况（年份月份，员工人数）\nselect year(hiredate) as year, month(hiredate) as month,count(*) from emp group by year(hiredate),month(hiredate) order by year(hiredate),month(hiredate)\n\n\n\n\n\n【1. 字符函数】\t    1.获得’goodmorning’ 的字符长度\nselect length(&#x27;goodmoring&#x27;)\n\n\n​\t2.将Hello全部转换成小写字母\nselect lower(&#x27;HellOKKK&#x27;)\n\n\n\n​\t3.将Hello全部转换成大写字母\nselect upper(&#x27;Hello&#x27;)\n\n\n\n​\t4.将hello首字母变为大写字母\t\nselect concat(upper(substring(&#x27;hello&#x27;,1,1)),substring(&#x27;hello&#x27;,2))\n\n\n\n\n​\t5.将’hello’ 与 ‘tom’  ,’good’拼接成一个单词\nselect concat(&#x27;hello&#x27;,&#x27;tom&#x27;,&#x27;good&#x27;)\n\n\n\n​\t6.获得’goodmorning’ 的第4 个字母\t \nselect substring(&#x27;goodmorning&#x27;,4,1)\n\n\n\n​\t7.截取’goodmorning’ 的moring 单词\t\nselect substring(&#x27;goodmorning&#x27;,5)\n\n\n\n​\t8.截取’Good  morning ！I’m Tom ‘   中的’o’ 用’A’来替代\nSELECT REPLACE(SUBSTRING(&#x27;Good  morning ! I\\&#x27;m Tom &#x27;, LOCATE(&#x27;o&#x27;, &#x27;Good  morning ! I\\&#x27;m Tom &#x27;)), &#x27;o&#x27;, &#x27;A&#x27;);\n\n\n\n【2. 日期函数】\t1.获得当前日期\nselect current_date()\n\n\n\n\n获得某一个日期的年份，月份，日期\n\nselect year(date),month(date),day(date) from mytable where date=&#x27;2023-02-13&#x27;\n\n\n\n\n获得某一个日期的星期\n\nselect datename(date) as weekday from mytable where date=&#x27;2023-04-11&#x27;\n\n\n\n\n获得当前日期的时分秒\n\nselect time(now())\n\n\n\n\n获得2天后的日期\n\nselect date_add(curdate(),interval 2 day)\n\n\n\n\n获得前2天的日期\n\nselect date_sub(curdate(),interval 2day)\n\n\n\n\n获得两个日期相差的年份，月份，天数\n\nselect timestampdiff(year,date1,date2)as diff_year       timestampdiff(month,date1,date2)as diff_month       timestampdiff(day,date1,date2) as diff_day       from mytable\n\n\n\n【3. 数值函数】\t1.获得38934.4383的整数部分\nselect floor(&#x27;38934.4383&#x27;)\n\n\n\n2.将38934.4387的保留2位小数，不需要四舍五入,直接截取\nselect truncate(38934.4387,2)\n\n\n\n3.将38934.4387的保留2位小数，需要四舍五入\nselect round(38934.4387,2)\n\n\n\n4.获得不小于38934.4383的最小正整数\nselect ceiling(38934.4383)\n\n\n\n5.获得不大于38934.4383的最大的正整数\nselect floor(38934.4383)\n\n\n\n\n\n","tags":["mysql练习题"]},{"title":"Mysql的安装与配置","url":"/2023/07/11/Mysql%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/","content":"1. MySQL介绍\n\nmysql属于瑞典的Mysql AB公司的,隶属于Oracle(甲骨文,主打的产品oracle数据库)旗下产品.\nmysql特点 - 体积小,速度快,特别适合中小型企业,开源,免费的.分成社区版和商业版.\n市面上主流的关系型数据库 - mysql,oracle,sqlserver(MS-微软)\nmysql软件也是采用c&#x2F;c++编写的.\n\n\n2. 专业术语\n\nDB - database 数据库 - 将数据按照一定的数据结构来进行存储,管理和组织的.\n数据的仓库\n\nDBMS - database management system - 数据库管理系统.用于操纵和控制数据库的系统.\n用于建立,使用和维护我们的db. 用户通过dbms来访问db中的数据,dba通过dbms来管理和维护\n我们的db. 使用dbms来保证db的安全性和完整性.\n\nRDBMS - relational database management system关系型数据库管理系统 - 负责管理关系型数据库\n\n关系型数据库 - 数据呈现的方式是一张二维表[行和列] - 表格型数据库\n\n非关系型数据库[nosql] - 键值对数据库redis,文档型数据库mongodb\n\nDBS - 数据库系统 - 类似”生态概念\nDBS &#x3D; DB + DBA[数据库管理员] + DBMS\n\n\n\n3. 安装MySQL\n\n访问MySQL官网下载: https://dev.mysql.com/downloads/mysql/\n\n\n下载压缩包,并解压在一个 非C盘、非中文、非特殊符号的路径下,例如:\nD:\\\\soft\\\\mysql-8.0.30-winx64\n\n\n进行一个环境变量的配置\n\n\n右击计算机 - 属性 - 高级系统设置 - 环境变量 - 系统变量\n\n定位到默认的自带的内置的变量名Path - 编辑 - 新建\n然后将mysql的bin目录的绝对地址拷贝进去即可.\n\n以后只要环境变量进行了设置 - 应用 - 确定 - 关闭所有的设置窗口\n一定要重启cmd窗口\n\n重新打开cmd - 输入mysql看是否生效\n\n\n\n\n在mysql-8.0.30-winx64下新建一个文件,必须是my.ini\n\nmy.ini文件中的配置如下\n唯一需要修改的只有basedir,把它修改成自己的mysql-8.0.32-winx64的绝对地址\n[client]# 设置mysql客户端默认字符集default-character-set=utf8 [mysqld]# 设置3306端口port = 3306# 设置mysql的安装目录basedir=D:\\\\soft\\\\mysql-8.0.32-winx64# 设置 mysql数据库的数据的存放目录，MySQL 8+ 不需要以下配置，系统自己生成即可，否则有可能报错# datadir=C:\\\\web\\\\sqldata# 允许最大连接数max_connections=20# 服务端使用的字符集默认为8比特编码的latin1字符集character-set-server=utf8# 创建新表时将使用的默认存储引擎default-storage-engine=INNODB\n\n用管理员的身份打开cmd\n\n从cmd利用dos命令进入到mysql-8.0.30-winx64\\bin目录\nC:\\WINDOWS\\&gt;d:\n\nD:\\&gt;cd softD:\\soft&gt;cd mysql-8.0.30-winx64D:\\soft\\mysql-8.0.30-winx64&gt;cd binD:\\soft\\mysql-8.0.30-winx64\\bin&gt;\n\n初始化DB\nD:\\soft\\mysql-8.0.30-winx64\\bin&gt; mysqld --initialize --console\n\n\n分配一个默认的密码\nmysql-8.0.32-winx64是否自动生成了data目录\n\n\n安装\nD:\\soft\\mysql-8.0.30-winx64\\bin&gt; mysqld install\n\n检测一下mysql的服务是否安装成功 - 右击计算机 - 管理 - 服务 - 服务和应用程序 - 右边的窗口 - MYSQL\n只有mysql服务处于正在执行的状态,那么mysql才能够正常使用,建议右击MYSQL属性 - 设置成开机自动启动.\n\n启动mysql\nD:\\soft\\mysql-8.0.30-winx64\\bin&gt; net start mysql\n\nmysql服务的运行状态 - 正在运行中\n\n重新开一个cmd窗口\n登陆mysql\nD:\\soft\\mysql-8.0.30-winx64\\bin&gt; mysql -uroot -p临时密码\n\n如果登陆失败:\n\n关闭mysql服务\n重新以管理员身份打开cmd\nC:\\User\\admin&gt;net stop mysql\n\n删除data目录\n\n重第八步重新开始\n\n\n\n直接修改密码即可\nalter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;root&#x27;;\n\n退出mysql登录\nmysql&gt;exit\n\n重新登录即可\nmysql -uroot -proot\n\n\n4. SQL分类\n它同时也是我们的脚本文件的后缀.\n\n\nstructured query language结构化查询语言…\n按照功能来划分\n\nDDL - Data Definition Language - 数据定义语言\n\ncreate,drop,alter等等…\n\nDCL - Data Control Language - 数据控制语言\ngrant(授权),revoke(取消权限)等等…\n\nDQL - Data Query Languge - 数据查询语言\nselect - 查询\n\nDML - Data Manipution Language - 数据操纵语言\ninsert,delete,update\n\nTCL - Transaction Control Languge - 事务控制语言\ncommit,rollback,savepoint等等…\n\n\n\n","tags":["Mysql的安装与配置"]},{"title":"hexo个人博客的搭建","url":"/2023/07/11/hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA/","content":"hexo+github搭建博客服务器\n\ncsdn,简书,有道笔记 - 广告比较多\nhexo+github[比较慢,翻墙]&#x2F;gitee[Git pages服务器 - 维护]&#x2F;阿里云服务器\n\n\n安装nodejs\n\n非中文的非特殊字符的目录中[目录中不要出现空格或者带有特殊符号的]\nD:&#x2F;node-v14.17.3-win-x64\n\n\n环境变量的配置\n\n桌面计算机 - 右击 - 属性 - 高级系统设置 - 环境变量(N)\n\n定位到下方的系统变量\n\n定位到变量名 - Path - 编辑 - 新建\n\nD:&#x2F;node-v14.17.3-win-x64\n\n一定要关闭所有的环境变量配置的窗口 - 确定\n\n打开终端[如果终端已经打开了,关闭 - 重新打开]\nwin[微软图标]+r - 输入cmd  - 输入如下指令检测nodejs是否配置成功\nnpm -v6.14.5 出现版本号,则说明配置成功   如果出现了不是内部或者外部的命令的同学,请检查自己的nodejs解压缩之后的路径是否成功配置到了path中\n\n\n简单认识npm\nnpm是javascript的一个**包[前端框架]**管理工具,并且是nodejs平台默认的包管理工具.\n通过npm可以安装,共享,分发代码,管理项目依赖关系.\n类似于java中的maven或者gradle[强大的项目构建工具以及项目依赖管理工具]\n\nnpm简单使用修改镜像\n为了下载速度变快,修改npm的镜像\nnpm config set registry https://registry.npm.taobao.org\n\n验证一下,镜像是否成功修改了\nnpm config get registryhttps://registry.npm.taobao.org/\n\n简单使用 - 不需要操作\n\n下载bootstrap\nnpm install 框架名称  - 默认下载的是最新的版本\nnpm install bootstrap@3\n\n\nHexo官网\nhttps://hexo.io/zh-cn/docs/\n\n安装\n\n假设你在D盘根目录下新建了一个文件夹hello-hexo[博客项目的根目录]\n\nwin+r - 打开终端\n\n通过dos命令进入到hello-hexo目录中\nC:/User/admin&gt;d:D:&gt;cd hello-hexoD:/hello-hexo&gt;npm install hexo-cli -g\n\n\n创建真正的博客目录D:/hello-hexo&gt;hexo init hello-blog\n\ncd hello-blogD:/hello-hexo/hello-blog&gt;npm install\n\n测试 - 启动博客服务器D:/hello-hexo/hello-blog&gt;hexo s\n\n关闭服务器\nctrl+c\n\n打开浏览器输入:localhost:4000\n常用主题模板\nhttps://blog.csdn.net/zgd826237710/article/details/99671027\n使用git命令来进行克隆,需要提前安装好git,检测git是否安装成功,重新打开终端\ngit --version\n\n注册码云账号\n推荐用QQ注册一下\n本地配置码云账号信息 - 配置文件 - 位置windows的用户主目录下\nC:&#x2F;User&#x2F;计算机用户名 - 观察是否存在**.gitconfig**文件,添加如下内容\n[user]\temail = 码云的QQ邮箱\tname = 用户名\n\n安装模板\n通过cmd进入到hello-blog目录中的themes目录中\nD:/hello-hexo/hello-blog&gt;cd themesD://hello-hexo/hello-blog/themes&gt;git clone https://gitee.com/guancg/hexo-theme-pure.git\n\n或者直接从github上直接clone\ngit clone https://github.com/cofess/hexo-theme-pure.git\n\n\n\n更新主题配置\n\n指定新的主题\nhello-blog目录下的_config.yml文件\ntheme: hexo-theme-pure \n\n\n\n\n重启服务器hexo s\n\n\n个人信息hexo-theme-pure&#x2F;_config.yml文件\noverriden  author: 任胜  author_title: 高级打字员  author_description: 个人简介。  location: SuZhou, China\n\nMarkdown语法\n语法的编辑器 - https://typora.io/\n文件的后缀是md\n常用语法如下:1. 标题的语法:1~6标题 - # 一级标题    ## 二级标题   2. 代码块 - java,js,mysql...​~~~java 敲enter键3. 列表3-1. 无序列表     * 列表名称     有序列表     1. 列表名称4. 高亮显示   `高亮显示内容`5. 加粗字体   **粗体**6. 斜体   *斜体*7. 粗+斜   ***粗斜***8. 段落   &gt; 空格9. 引入外部图片   ![](xx.png)10. 表格\n\n新建博文D://hello-hexo/hello-blog&gt;hexo n java\n\n效果:hello-blog目录下的source&#x2F;_ports&#x2F;自动生成一个java.md文件\n重启blog服务器\nD://hello-hexo/hello-blog&gt;hexo s\n\n\n\n主题的侧边栏\n侧边栏的链接生效\n将&#x2F;hello-blog&#x2F;themes&#x2F;hexo-theme-pure&#x2F;_source&#x2F;下的除了_data文件夹,其余文件夹\n拷贝一份放入到hello-blog目录下的source目录中即可\n\n文章的分类和标签\n只需要在文章的.md文件的自动生成的头部添加\ntitle: javadate: 2021-07-13 08:44:42categories: javatags: java\n\n博客的语言环境设置\n设置中文\nhello-blog下的_config.yml文件中\nlanguage: zh-CN\n\n图片显示问题\n\n安装插件 - npm install https://gitee.com/guancg/hexo-asset-image.git –save\n\n需要到hello-blog&#x2F;_config.yml文件中进行配置\npost_asset_folder: true\n\nhexo n 机器学习\n效果就是除了生成了机器学习.md还有一个机器学习文件夹,那么这篇文章的所有的图片就可以存储在机器学习文件夹中\n\nhexo s\n\n\n\n内置搜索的功能\n# Searchsearch:insight: true # you need to install `hexo-generator-json-content` before using Insight Searchbaidu: false # you need to disable other search engines to use Baidu search\n\n安装内置搜索插件\nnpm i -S hexo-generator-json-content\n\n评论\n不需要本地数据库进行存储的,用的是第三方的.\nLeanCloud - 官网地址 - https://www.leancloud.cn/\n注册 - 登录 - 控制台 - 创建应用 - 右下设置 - 应用凭证\nappId - sljUq97vUAdLAo7XQdf13aFR-gzGzoHsz\nappKey - 3hn4ijEgSzJeRV4nkmXThmGV\n\n在hexo-theme-pure\\_config.yml文件中配置\n\nvaline: # Valine. https://valine.js.org appid: sljUq97vUAdLAo7XQdf13aFR-gzGzoHsz  # your leancloud application appid appkey: 3hn4ijEgSzJeRV4nkmXThmGV# your leancloud application appkey notify: false # mail notifier , https://github.com/xCss/Valine/wiki verify: false # Verification code placeholder: Just go go # comment box placeholder avatar: mm # gravatar style meta: nick,mail,link # custom comment header pageSize: 10 # pagination size visitor: true # Article reading statistic https://valine.js.org/visitor.html\n\n#字数统计&amp;阅读时长\n\n\nnpm i -S hexo-wordcount\n\nhexo-theme-pure_config.yml文件中配置\npostCount:  enable: true  wordcount: true  # 文章字数统计  min2read: true  # 阅读时长预计 \n\n\n附件-优秀插件\n\n显示图片\nnpm install https://gitee.com/guancg/hexo-asset-image.git --save\n\n内置搜索\nnpm i -S hexo-generator-json-content\n\n字数统计&amp;阅读时长\nnpm i -S hexo-wordcount\n\n\n\n\ngithub部署\nnpm install hexo-deployer-git --save\n\n\n部署github\ngit config –global user.name “github用户名” \ngit config –global user.email “github邮箱”\n\n\ngithub.com\n\n\nchrome浏览器 + iguge - https://iguge.app/\n\n\n新建的仓库的名称必须是guancgsuccess.github.io\n仓库地址 - https://github.com/Rs-zt/Rs-zt.github.io.git\n\n\n安装github部署插件\nnpm install hexo-deployer-git –save\n\n\nhello-blog&#x2F;_config.yml文件\ndeploy:type: &#x27;git&#x27;repo: &#x27;https://github.com/Rs-zt/Rs-zt.github.io.git&#x27;branch: &#x27;master&#x27;\n\nhexo三连操作\nhexo clhexo ghexo shexo d\n\n\n\n浏览器输入 - Rs-zt.github.io\n","tags":["hexo"]},{"title":"Hello World","url":"/2023/07/10/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"}]